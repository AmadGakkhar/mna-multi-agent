import autogen
from autogen import ConversableAgent, register_function, GroupChatManager, GroupChat
from autogen.agentchat.contrib.web_surfer import WebSurferAgent  # noqa: E402import os
from configs import OAI_CONFIG, SUMMARISER_CONFIG, GEMINI_CONFIG
from prompts import (
    researcher_prompt_2,
    researcher_prompt_3,
    researcher_prompt_4,
    web_surfer_prompt,
)
import os
from utils import read_markdown_file


def react_prompt_message(sender, recipient, context):
    return web_surfer_prompt.format(input=context["question"])


researcher = ConversableAgent(
    "researcher",
    system_message=researcher_prompt_4,
    llm_config=OAI_CONFIG,
    code_execution_config=False,
    human_input_mode="NEVER",  # Never ask for human input.
)

web_surfer = WebSurferAgent(
    "web_surfer",
    llm_config=OAI_CONFIG,
    summarizer_llm_config=SUMMARISER_CONFIG,
    browser_config={"viewport_size": 4096, "bing_api_key": os.environ["bing_api_key"]},
)


user_proxy = ConversableAgent(
    "user_proxy", llm_config=OAI_CONFIG, human_input_mode="ALWAYS"
)


# result = user_proxy.initiate_chats(
#     researcher,
#     message=read_markdown_file(
#         "/home/amadgakkhar/code/mna-multi-agent/autogen/output.md"
#     ),
# )

# result = user_proxy.initiate_chat(
#     researcher,
#     message=read_markdown_file(
#         "/home/amadgakkhar/Microsoft_Acquisition_Strategy_Agriculture.md"
#     ),
# )

##Group Chat Code

# researcher.description = "Generates search queries based on the report and uses web_surfer agent to execute the queries, visit pages and store information"
# web_surfer.description = "Uses Bing API to search for queries generated by researcher, visits pages, scrapes information"
# group_chat = GroupChat(
#     agents=[researcher, web_surfer, user_proxy], messages=[], send_introductions=True
# )

# manager = GroupChatManager(
#     groupchat=group_chat,
#     llm_config=OAI_CONFIG,
# )

# result = user_proxy.initiate_chat(
#     manager,
#     message=read_markdown_file(
#         "/home/amadgakkhar/Microsoft_Acquisition_Strategy_Agriculture.md"
#     ),
# )


# result = user_proxy.initiate_chat(
#     web_surfer,
#     message=f"find potential acquisition targets absed on this report{read_markdown_file('/home/amadgakkhar/Microsoft_Acquisition_Strategy_Agriculture.md')}",
# )
report = read_markdown_file(
    "/home/amadgakkhar/Microsoft_Acquisition_Strategy_Agriculture.md"
)
result = user_proxy.initiate_chat(
    web_surfer,
    message=react_prompt_message,
    question="What is the stock price of apple",
)
